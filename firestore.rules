
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isExistingOwner(userId);
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    match /messages/{messageId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.senderId == request.auth.uid;
      allow update: if isSignedIn() && (request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.recipientId);
      allow delete: if isSignedIn() && request.auth.uid == resource.data.senderId;
    }

    match /calls/{callId} {
      allow get: if isSignedIn() && (resource.data.callerId == request.auth.uid || resource.data.recipientId == request.auth.uid);
      allow list: if isSignedIn() && (request.query.where.callerId == request.auth.uid || request.query.where.recipientId == request.auth.uid);
      allow create: if isSignedIn() && request.resource.data.callerId == request.auth.uid;
      allow update: if isSignedIn() && (resource.data.callerId == request.auth.uid || resource.data.recipientId == request.auth.uid);
      allow delete: if isSignedIn() && (resource.data.callerId == request.auth.uid || resource.data.recipientId == request.auth.uid);

      match /iceCandidates/{candidateId} {
        allow read, create: if isSignedIn() && (get(/databases/$(database)/documents/calls/$(callId)).data.callerId == request.auth.uid || get(/databases/$(database)/documents/calls/$(callId)).data.recipientId == request.auth.uid);
      }
    }

    match /chats/{userId} {
      allow get, list, create, update, delete: if isSignedIn() && isOwner(userId);
    }

    match /users/{userId}/todos/{todoId} {
      allow get, list, create, update, delete: if isSignedIn() && isOwner(userId);
    }
    
    match /users/{userId}/reports/{reportId} {
        allow get, list, create, update, delete: if isSignedIn() && isOwner(userId);
    }

    match /clientLeads/{leadId} {
      allow read, write: if isSignedIn();
    }

    match /marketingContent/{contentId} {
      allow read, write: if isSignedIn();
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
    }
  }
}
