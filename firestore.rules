
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow get, list: if isSignedIn();
      allow create: if isOwner(userId);
      allow update, delete: if isOwner(userId);
    }
    
    match /messages/{messageId} {
        allow read, write: if isSignedIn();
    }
    
    match /users/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    match /clientLeads/{leadId} {
        allow read, write: if isSignedIn();
    }

    match /marketingContent/{contentId} {
        allow read, write: if isSignedIn();
    }
    
    match /clients/{clientId} {
      allow read, write: if isSignedIn();
    }
    
    match /admins/{adminId} {
        allow read, write: if request.auth.uid == adminId;
    }

    match /calls/{callId} {
      allow get: if isSignedIn() && (request.auth.uid == resource.data.callerId || request.auth.uid == resource.data.recipientId);
      allow list: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.callerId == request.auth.uid;
      allow update: if isSignedIn() && (request.auth.uid == resource.data.callerId || request.auth.uid == resource.data.recipientId);
      allow delete: if isSignedIn() && (request.auth.uid == resource.data.callerId || request.auth.uid == resource.data.recipientId);

      match /iceCandidates/{candidateId} {
        allow read, create: if isSignedIn();
      }
    }
  }
}

